# This viminfo file was generated by Vim 8.1.
# You may edit it if you're careful!

# Viminfo version
|1,4

# Value of 'encoding' when this file was written
*encoding=utf-8


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~Msle0~/\<C\>

# Last Substitute String:
$

# Command Line History (newest to oldest):
:x
|2,0,1648583566,,"x"
:x}
|2,0,1648583237,,"x}"
:set number
|2,0,1648134676,,"set number"
:set numbers
|2,0,1647983234,,"set numbers"
:X
|2,0,1647631980,,"X"
:wq 6-puts2.c
|2,0,1646431570,,"wq 6-puts2.c"
:!
|2,0,1646431499,,"!"
:q
|2,0,1646431494,,"q"
:w
|2,0,1646431492,,"w"
:W
|2,0,1646431490,,"W"
:!q
|2,0,1646431444,,"!q"
:wq
|2,0,1646431414,,"wq"
:e
|2,0,1646431363,,"e"
:q!
|2,0,1646067206,,"q!"
:qs
|2,0,1646067141,,"qs"
:xxx
|2,0,1646067129,,"xxx"
:s
|2,0,1646067117,,"s"
:x 
|2,0,1646061347,,"x "
:Ñx
|2,0,1644930149,,"Ñx"
:c
|2,0,1644607827,,"c"

# Search String History (newest to oldest):
? \<C\>
|2,1,1648571802,,"\\<C\\>"
? \<args\>
|2,1,1648135305,,"\\<args\\>"
? >
|2,1,1647968765,,">"
?/**
|2,1,1646431348,47,"**"
? @$
|2,1,1646421274,,"@$"
? \<str\>
|2,1,1645483070,,"\\<str\\>"
?/i
|2,1,1644344568,47,"i"
?/bin/bash
|2,1,1643920127,47,"bin/bash"

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Debug Line History (newest to oldest):

# Registers:
"0	CHAR	0
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	/**
	 * num_checker - checks if a given char is number or not
	 * @a: char to be checked
	 * Return: 1, if its a number, else 0
	 **/
	int num_checker(char *a)
	{
		int i, num, len;
	
		i = 0;
		num = 0;
		len = strlen(a);
		while (i < len)
		{
			if (a[i] < '0' || a[i] > '9')
			{
				return (-1);
			}
			else
				num = num * 10 + (a[i] - '0');
			i++;
		}
		return (num);
	}
	/**
	 * main - add positive numbers
	 * @argc: arguement count
	 * @argv: array of pointers to arguement strings
	 * Return: result of addition or 1
	 **/
	int main(int argc, char *argv[])
	{
		int i, num, sum;
	
		sum = 0;
		for (i = 1; i < argc; i++)
		{
			num = num_checker(argv[i]);
			if (num == -1)
			{
				printf("Error\n");
				return (1);
			}
			sum += num;
		}
		printf("%d\n", sum);
		return (0);
|3,0,0,0,50,0,1646421309,"#include <stdio.h>","#include <stdlib.h>","#include <string.h>","/**"," * num_checker - checks if a given char is number or not"," * @a: char to be checked"," * Return: 1, if its a number, else 0"," **/","int num_checker(char *a)","{","	int i, num, len;","","	i = 0;","	num = 0;","	len = strlen(a);","	while (i < len)","	{","		if (a[i] < '0' || a[i] > '9')","		{","			return (-1);","		}","		else","			num = num * 10 + (a[i] - '0');",>8
|<"		i++;","	}","	return (num);","}","/**"," * main - add positive numbers"," * @argc: arguement count"," * @argv: array of pointers to arguement strings"," * Return: result of addition or 1"," **/","int main(int argc, char *argv[])","{","	int i, num, sum;","","	sum = 0;","	for (i = 1; i < argc; i++)","	{","		num = num_checker(argv[i]);","		if (num == -1)","		{","			printf(\"Error\\n\");","			return (1);","		}","		sum += num;","	}","	printf(\"%d\\n\", sum);","	return (0);"
""1	CHAR	0
	#include "lists.h"
	#include <stdio.h>
	#include <stdlib.h>
	#include <string.h>
	
	/**
	 * print_list - function that prints all the elements of a list_t list
	 * @h: pointer to the struct list_t
	 *
	 * Return: size_t
	 */
	
	size_t print_list(const list_t *h)
	{
		size_t count;
	
	
		for (count = 0; h != NULL; count++)
		{
			if ((*h).str == NULL)
				printf("[0] (nil)\n");
			else
				printf("[%i] %s\n", (*h).len, (*h).str);
			h = (*h).next;
		}
		return (count);
|3,1,1,0,26,0,1648581658,"#include \"lists.h\"","#include <stdio.h>","#include <stdlib.h>","#include <string.h>","","/**"," * print_list - function that prints all the elements of a list_t list"," * @h: pointer to the struct list_t"," *"," * Return: size_t"," */","","size_t print_list(const list_t *h)","{","	size_t count;","","","	for (count = 0; h != NULL; count++)","	{","		if ((*h).str == NULL)","			printf(\"[0] (nil)\\n\");","		else",>48
|<"			printf(\"[%i] %s\\n\", (*h).len, (*h).str);","		h = (*h).next;","	}","	return (count);"
"2	CHAR	0
	
	{
		int len = 0, len2 = 0;
	
		while (s[len] != '\0')
		{
			len++;
			len2++;
		}
		while (len)
			_putchar(s[--len]);
		return (len2);
	}
|3,0,2,0,13,0,1648134309,"","{","	int len = 0, len2 = 0;","","	while (s[len] != '\\0')","	{","		len++;","		len2++;","	}","	while (len)","		_putchar(s[--len]);","	return (len2);","}"
"3	CHAR	0
	while (flags[i].letter)
	{
	if (flags[i].letter == c)
	return (flags[i].prnt);
	i++;
	}
	return (NULL);
	}
|3,0,3,0,8,0,1647986090,"while (flags[i].letter)","{","if (flags[i].letter == c)","return (flags[i].prnt);","i++;","}","return (NULL);","}"
"4	CHAR	0
	for (i = 0; flags[i].letter != '\0'; i++)
		{
			if (flags[i].letter == c)
			{
				return (flags[i].prnt(args));
			}
		}
		if (c == '%')
		{
			_write('%');
			return (1);
		}
		return (0);
	}
|3,0,4,0,14,0,1647982637,"for (i = 0; flags[i].letter != '\\0'; i++)","	{","		if (flags[i].letter == c)","		{","			return (flags[i].prnt(args));","		}","	}","	if (c == '%')","	{","		_write('%');","		return (1);","	}","	return (0);","}"
"5	CHAR	0
	#include <stdio.h>
	#include "variadic_functions.h"
	/*
	 * print_numbers - imprima los numeros dado
|3,0,5,0,4,0,1647635926,"#include <stdio.h>","#include \"variadic_functions.h\"","/*"," * print_numbers - imprima los numeros dado"
"6	CHAR	0
	s
	 * @separator: string to be seperated between numbers
	 * @n: number of arguements
	 * Return: nothing
	 */
	void print_numbers(const char *separator, const unsigned int n, ...)
	{
	va_list numbers;
		unsigned int i;
	
		va_start(numbers, n);
		for (i = 0; i < n; i++)
		{
			printf("%d", va_arg(numbers, unsigned int));
			if (i < (n - 1) && separator != NULL)
				printf("%s", separator);
		}
		va_end(numbers);
		printf("\n");
	}
|3,0,6,0,20,0,1647635920,"s"," * @separator: string to be seperated between numbers"," * @n: number of arguements"," * Return: nothing"," */","void print_numbers(const char *separator, const unsigned int n, ...)","{","va_list numbers;","	unsigned int i;","","	va_start(numbers, n);","	for (i = 0; i < n; i++)","	{","		printf(\"%d\", va_arg(numbers, unsigned int));","		if (i < (n - 1) && separator != NULL)","			printf(\"%s\", separator);","	}",>19
|<"	va_end(numbers);","	printf(\"\\n\");","}"
"7	CHAR	0
	unctions.h"
	#include <stdio.h>
	/**
	 *sum_them_all - sum all arguements
	 * @n: number of arguements
	 * Return: 0 is n is 0 or return sum
	 *
	 */
	int sum_them_all(const unsigned int n, ...);
	{
		int sum;
		va_list numbers;
		unsigned int i;
	
		if (n == 0)
			return (0);
	
		if (n == 0)
			return (0);
		sum = 0;
		va_start(numbers, n);
		for (i = 0; i < n; i++)
		{
			sum += va_arg(numbers, int);
		}
		va_end(numbers);
		return (sum);
|3,0,7,0,27,0,1647632539,"unctions.h\"","#include <stdio.h>","/**"," *sum_them_all - sum all arguements"," * @n: number of arguements"," * Return: 0 is n is 0 or return sum"," *"," */","int sum_them_all(const unsigned int n, ...);","{","	int sum;","	va_list numbers;","	unsigned int i;","","	if (n == 0)","		return (0);","","	if (n == 0)","		return (0);","	sum = 0;","	va_start(numbers, n);","	for (i = 0; i < n; i++)","	{","		sum += va_arg(numbers, int);","	}",>19
|<"	va_end(numbers);","	return (sum);"
"8	CHAR	0
	#include <stdlib.h>
	#include "holberton.h"
	/**
	 * *_realloc -  reallocates a memory block using malloc and free
	 * @ptr: void pointer
	 * @old_size: already allocated size
	 * @new_size: new size to allocate
	 * Return: pointer to newly allocated memory or null
	 **/
	void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)
	{
		unsigned char *np;
		unsigned int i;
	
		if (new_size == old_size)
			return (ptr);
		if (new_size == 0 && ptr != NULL)
		{
			free(ptr);
			return (NULL);
		}
		if (ptr == NULL)
		{
			ptr = malloc(new_size * sizeof(void *));
			if (ptr == NULL)
				return (NULL);
			return (ptr);
		}
		np = malloc(new_size * sizeof(char));
		if (np == NULL)
			return (NULL);
		i = 0;
		if (new_size > old_size)
		{
			while (i < old_size)
			{
				np[i] = ((char *)ptr)[i];
				i++;
			}
			free(ptr);
			return (np);
		}
	/* if new_size < old_size */
		while (i < new_size)
		{
			np[i] = ((char *)ptr)[i];
			i++;
		}
		free(ptr);
		return (np);
|3,0,8,0,50,0,1647119758,"#include <stdlib.h>","#include \"holberton.h\"","/**"," * *_realloc -  reallocates a memory block using malloc and free"," * @ptr: void pointer"," * @old_size: already allocated size"," * @new_size: new size to allocate"," * Return: pointer to newly allocated memory or null"," **/","void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)","{","	unsigned char *np;","	unsigned int i;","","	if (new_size == old_size)",>17
|<"		return (ptr);","	if (new_size == 0 && ptr != NULL)","	{","		free(ptr);","		return (NULL);","	}","	if (ptr == NULL)","	{","		ptr = malloc(new_size * sizeof(void *));","		if (ptr == NULL)","			return (NULL);","		return (ptr);","	}","	np = malloc(new_size * sizeof(char));","	if (np == NULL)","		return (NULL);","	i = 0;","	if (new_size > old_size)","	{","		while (i < old_size)","		{","			np[i] = ((char *)ptr)[i];","			i++;","		}","		free(ptr);","		return (np);","	}",>30
|<"/* if new_size < old_size */","	while (i < new_size)","	{","		np[i] = ((char *)ptr)[i];","		i++;","	}","	free(ptr);","	return (np);"
"9	CHAR	0
	#include "main.h"
	#include <stdio.h>
	#include <stdlib.h>
	/*
	 * _realloc - function that reallocates a memory block using malloc and free
	 * @ptr: pointer to the old array
	 * @old_size: size of the memory space to allocate in bytes
	 * @new_size: size of type
	 * Return: void pointer
	 */
	void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)
	{
	
	
	}
|3,0,9,0,15,0,1647117625,"#include \"main.h\"","#include <stdio.h>","#include <stdlib.h>","/*"," * _realloc - function that reallocates a memory block using malloc and free"," * @ptr: pointer to the old array"," * @old_size: size of the memory space to allocate in bytes"," * @new_size: size of type"," * Return: void pointer"," */","void *_realloc(void *ptr, unsigned int old_size, unsigned int new_size)","{","","","}"
"-	CHAR	0
	n
|3,0,36,0,1,0,1648134593,"n"

# File marks:
'0  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,48,8,34,1648583566,"~/0x12-singly_linked_lists/0-print_list.c"
'1  9  16  ~/0x12-singly_linked_lists/1-list_len.c
|4,49,9,16,1648583430,"~/0x12-singly_linked_lists/1-list_len.c"
'2  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,50,8,34,1648583272,"~/0x12-singly_linked_lists/1-list_len.c"
'3  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,51,8,34,1648583272,"~/0x12-singly_linked_lists/1-list_len.c"
'4  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,52,8,34,1648583254,"~/0x12-singly_linked_lists/0-print_list.c"
'5  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,53,20,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
'6  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,54,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
'7  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,55,20,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
'8  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,56,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
'9  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,57,1,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"

# Jumplist (newest first):
-'  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,8,34,1648583566,"~/0x12-singly_linked_lists/0-print_list.c"
-'  9  16  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,9,16,1648583430,"~/0x12-singly_linked_lists/1-list_len.c"
-'  9  16  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,9,16,1648583430,"~/0x12-singly_linked_lists/1-list_len.c"
-'  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,8,34,1648583280,"~/0x12-singly_linked_lists/1-list_len.c"
-'  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,8,34,1648583280,"~/0x12-singly_linked_lists/1-list_len.c"
-'  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,8,34,1648583272,"~/0x12-singly_linked_lists/1-list_len.c"
-'  8  34  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,8,34,1648583272,"~/0x12-singly_linked_lists/1-list_len.c"
-'  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,20,0,1648583261,"~/0x12-singly_linked_lists/1-list_len.c"
-'  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,20,0,1648583261,"~/0x12-singly_linked_lists/1-list_len.c"
-'  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,20,0,1648583261,"~/0x12-singly_linked_lists/1-list_len.c"
-'  20  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,20,0,1648583261,"~/0x12-singly_linked_lists/1-list_len.c"
-'  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,8,34,1648583254,"~/0x12-singly_linked_lists/0-print_list.c"
-'  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,8,34,1648583254,"~/0x12-singly_linked_lists/0-print_list.c"
-'  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,8,34,1648583254,"~/0x12-singly_linked_lists/0-print_list.c"
-'  8  34  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,8,34,1648583254,"~/0x12-singly_linked_lists/0-print_list.c"
-'  25  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,25,0,1648581959,"~/0x12-singly_linked_lists/0-print_list.c"
-'  25  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,25,0,1648581959,"~/0x12-singly_linked_lists/0-print_list.c"
-'  25  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,25,0,1648581959,"~/0x12-singly_linked_lists/0-print_list.c"
-'  25  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,25,0,1648581959,"~/0x12-singly_linked_lists/0-print_list.c"
-'  25  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,25,0,1648581959,"~/0x12-singly_linked_lists/0-print_list.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  21  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,21,0,1648581937,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648581380,"~/0x12-singly_linked_lists/1-list_len.c"
-'  25  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,25,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  25  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,25,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  25  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,25,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  25  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,25,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,26,0,1648581375,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648579981,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648579981,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648579981,"~/0x12-singly_linked_lists/1-list_len.c"
-'  1  0  ~/0x12-singly_linked_lists/1-list_len.c
|4,39,1,0,1648579981,"~/0x12-singly_linked_lists/1-list_len.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579823,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  26  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,26,0,1648579691,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"
-'  1  0  ~/0x12-singly_linked_lists/0-print_list.c
|4,39,1,0,1648579081,"~/0x12-singly_linked_lists/0-print_list.c"

# History of marks within files (newest to oldest):

> ~/0x12-singly_linked_lists/0-print_list.c
	*	1648583555	0
	"	8	34
	^	8	35
	.	9	0
	+	26	0
	+	9	0

> ~/0x12-singly_linked_lists/1-list_len.c
	*	1648583429	0
	"	9	16
	^	8	35
	.	9	0
	+	1	0
	+	20	0
	+	9	0

> ~/0x12-singly_linked_lists/lists.h
	*	1648579069	0
	"	13	7
	^	21	1
	.	34	6
	+	1	108
	+	2	0
	+	1	102
	+	1	14
	+	1	30
	+	1	67
	+	34	6

> ~/0x12-singly_linked_lists/main.h
	*	1648573214	0
	"	3	0
	^	3	0
	.	5	0
	+	5	0

> ~/0x12-singly_linked_lists/README.md
	*	1648571972	0
	"	15	0
	^	15	0
	.	16	0
	+	1	25
	+	3	22
	+	15	80
	+	4	65
	+	6	42
	+	8	51
	+	10	41
	+	12	44
	+	14	63
	+	16	0

> ~/printf/README.md
	*	1648157955	0
	"	35	10
	^	35	11
	.	35	10
	+	1	20
	+	34	11
	+	35	0
	+	34	11
	+	35	0
	+	36	0
	+	38	12
	+	1	38
	+	1	20
	+	1	0
	+	1	20
	+	1	18
	+	35	0
	+	36	4
	+	5	19
	+	8	31
	+	12	31
	+	16	34
	+	9	0
	+	13	0
	+	17	0
	+	21	0
	+	25	0
	+	29	0
	+	32	0
	+	36	73
	+	34	0
	+	27	0
	+	38	12
	+	38	13
	+	38	11
	+	33	93
	+	35	10

> ~/printf/prueba
	*	1648139866	0
	"	8	23
	^	8	22
	.	8	21
	+	1	21
	+	6	14
	+	4	22
	+	7	0
	+	2	8
	+	8	21

> ~/printf/2p.format.c
	*	1648137117	0
	"	27	7
	^	27	8
	.	27	7
	+	25	19
	+	25	150
	+	25	19
	+	26	1
	+	26	199
	+	26	164
	+	26	82
	+	26	59
	+	26	41
	+	19	1
	+	24	2
	+	20	2
	+	21	8
	+	23	9
	+	26	1
	+	26	19
	+	26	42
	+	21	11
	+	23	8
	+	26	77
	+	26	90
	+	26	57
	+	26	86
	+	26	64
	+	26	9
	+	31	0
	+	30	17
	+	28	21
	+	30	33
	+	27	10
	+	29	21
	+	30	0
	+	28	0
	+	27	0
	+	29	0
	+	28	1
	+	29	1
	+	30	1
	+	29	4
	+	30	1
	+	27	7

> ~/printf/1f_print.c
	*	1648136968	0
	"	11	0
	^	11	0
	.	11	0
	+	3	19
	+	12	0
	+	8	4
	+	9	11
	+	5	43
	+	7	23
	+	11	14
	+	12	0
	+	8	2
	+	4	2
	+	9	23
	+	11	0

> ~/printf/main.h
	*	1648134913	0
	"	29	29
	^	29	30
	.	29	29
	+	7	37
	+	26	0
	+	19	0
	+	15	1
	+	27	20
	+	29	29

> ~/printf/f_print.c
	*	1648133809	0
	"	31	0
	^	31	1
	.	31	0
	+	32	1
	+	33	0
	+	4	2
	+	8	2
	+	14	2
	+	18	2
	+	24	2
	+	28	2
	+	9	25
	+	11	32
	+	19	22
	+	21	29
	+	29	23
	+	31	30
	+	11	0
	+	21	0
	+	31	0

> ~/printf/best_print.c
	*	1648132996	0
	"	18	14
	^	18	15
	.	22	7
	+	1	0
	+	6	21
	+	6	3
	+	7	19
	+	23	0
	+	21	26
	+	23	0
	+	21	3
	+	23	0
	+	23	23
	+	23	12
	+	24	0
	+	31	19
	+	23	11
	+	25	17
	+	26	25
	+	14	12
	+	26	15
	+	31	15
	+	25	32
	+	26	30
	+	23	19
	+	24	0
	+	25	0
	+	26	0
	+	28	0
	+	29	0
	+	31	14
	+	32	0
	+	23	0
	+	25	5
	+	22	7

> ~/printf/man_3_printf
	*	1648058565	0
	"	90	36
	^	90	37
	.	7	16
	+	89	53
	+	91	0
	+	89	10
	+	90	5
	+	66	16
	+	2	21
	+	7	16

> ~/printf/main.c
	*	1647983291	0
	"	44	0
	^	44	1
	.	44	0
	+	44	0

> ~/printf/p.format.c
	*	1647983249	0
	"	22	40
	^	22	41
	.	22	41
	+	22	41

> ~/printf/_write.c
	*	1647981866	0
	"	12	24
	^	12	25
	.	12	0
	+	13	0
	+	12	0

> ~/printf/_printf.c
	*	1647981767	0
	"	30	0
	^	30	1
	.	29	0
	+	1	17
	+	1	62
	+	1	70
	+	1	83
	+	1	62
	+	1	75
	+	1	76
	+	1	70
	+	1	75
	+	30	0
	+	1	102
	+	1	19
	+	6	2
	+	5	14
	+	19	17
	+	9	12
	+	13	13
	+	19	43
	+	28	11
	+	10	14
	+	15	20
	+	17	13
	+	24	19
	+	20	3
	+	15	32
	+	19	31
	+	24	8
	+	30	0
	+	9	0
	+	10	0
	+	12	0
	+	13	0
	+	15	0
	+	16	0
	+	17	0
	+	18	0
	+	19	0
	+	20	0
	+	21	0
	+	22	0
	+	23	0
	+	24	0
	+	25	0
	+	26	0
	+	27	0
	+	28	0
	+	29	0

> ~/printf/best_print
	*	1647971887	0
	"	1	0
	^	1	0
	.	1	0
	+	1	17
	+	1	56
	+	1	17
	+	1	36
	+	1	55
	+	1	195
	+	1	129
	+	1	193
	+	1	68
	+	1	120
	+	1	143
	+	1	58
	+	1	60
	+	1	198
	+	1	200
	+	1	199
	+	1	58
	+	1	194
	+	1	60
	+	1	59
	+	1	3
	+	1	18
	+	1	0

> ~/printf/ram
	*	1647969065	0
	"	2	0
	^	2	1
	.	2	0
	+	4	0
	+	3	0
	+	2	0

> ~/printf/ramdim
	*	1647969036	0
	"	4	9
	^	4	10
	.	4	9
	+	7	0
	+	4	9

> /.git/MERGE_MSG
	*	1647891351	0
	"	1	0

> ~/printf/aloha
	*	1647889985	0
	"	1	0

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/3-print_all.c
	*	1647636722	0
	"	50	0
	^	50	0
	.	50	0
	+	50	0

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/variadic_functions.h
	*	1647636701	0
	"	8	46
	^	8	47
	.	8	41
	+	10	7
	+	1	6
	+	10	5
	+	1	19
	+	1	39
	+	5	43
	+	1	40
	+	8	47
	+	8	200
	+	5	0
	+	2	31
	+	8	251
	+	8	258
	+	2	15
	+	3	0
	+	8	47
	+	8	41

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/2-print_strings.c
	*	1647636136	0
	"	31	0
	^	31	1
	.	31	0
	+	31	0

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/1-print_numbers.c
	*	1647635932	0
	"	29	0
	^	29	1
	.	29	0
	+	1	19
	+	1	31
	+	1	44
	+	1	43
	+	1	60
	+	1	56
	+	1	43
	+	2	0
	+	29	0

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/0-sum_them_all.c
	*	1647632605	0
	"	26	0
	^	26	1
	.	26	0
	+	1	31
	+	1	21
	+	1	31
	+	1	32
	+	1	30
	+	1	34
	+	1	31
	+	1	28
	+	1	50
	+	1	36
	+	1	21
	+	1	55
	+	1	21
	+	1	34
	+	1	31
	+	1	20
	+	1	21
	+	2	0
	+	26	0

> ~/holbertonschool-low_level_programming/0x10-variadic_functions/README.md
	*	1647626567	0
	"	1	19
	^	1	20
	.	1	19
	+	4	42
	+	1	19

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/3-main.c
	*	1647561088	0
	"	44	0
	^	44	1
	.	44	0
	+	44	0

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/3-calc.h
	*	1647560625	0
	"	15	0
	^	15	0
	.	15	0
	+	1	12
	+	28	7
	+	3	0
	+	4	18
	+	5	19
	+	6	19
	+	7	3
	+	17	7
	+	28	5
	+	23	24
	+	26	38
	+	28	6
	+	16	0
	+	15	0

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/3-op_functions.c
	*	1647560346	0
	"	55	0
	^	55	1
	.	55	0
	+	55	0

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/3-get_op_func.c
	*	1647560309	0
	"	28	0
	^	28	1
	.	28	0
	+	28	0

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/2-int_index.c
	*	1647555933	0
	"	19	21
	^	19	22
	.	19	21
	+	1	30
	+	1	167
	+	1	177
	+	1	161
	+	1	111
	+	1	68
	+	1	119
	+	1	58
	+	1	47
	+	1	106
	+	1	111
	+	1	192
	+	1	206
	+	1	209
	+	1	193
	+	1	209
	+	1	194
	+	1	237
	+	1	277
	+	1	176
	+	1	257
	+	1	276
	+	24	0
	+	19	18
	+	18	6
	+	12	5
	+	20	11
	+	19	21

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/1-array_iterator.c
	*	1647551117	0
	"	1	29
	^	1	30
	.	1	29
	+	1	30
	+	7	2
	+	6	56
	+	6	54
	+	7	3
	+	15	0
	+	9	0
	+	1	29

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/0-print_name.c
	*	1647548296	0
	"	6	17
	^	6	18
	.	6	17
	+	1	27
	+	15	1
	+	1	28
	+	1	41
	+	1	46
	+	15	2
	+	9	1
	+	10	30
	+	10	0
	+	5	24
	+	7	0
	+	3	2
	+	10	18
	+	14	10
	+	12	9
	+	1	28
	+	12	1
	+	14	0
	+	11	0
	+	13	0
	+	16	0
	+	14	0
	+	1	45
	+	12	8
	+	1	44
	+	12	8
	+	10	12
	+	2	0
	+	6	17

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/function_pointers.h
	*	1647548199	0
	"	6	17
	^	6	18
	.	6	17
	+	11	5
	+	7	46
	+	2	25
	+	10	0
	+	4	18
	+	5	19
	+	6	17

> ~/holbertonschool-low_level_programming/0x0F-function_pointers/README.md
	*	1647538744	0
	"	4	59
	^	4	60
	.	4	59
	+	1	23
	+	1	1
	+	4	59

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/5-free_dog.c
	*	1647288493	0
	"	16	0
	^	16	1
	.	16	0
	+	16	0

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/4-new_dog.c
	*	1647288458	0
	"	42	0
	^	42	1
	.	42	0
	+	42	0

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/2-print_dog.c
	*	1647288395	0
	"	25	0
	^	25	1
	.	25	0
	+	25	0

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/README.md
	*	1647288288	0
	"	1	2
	^	1	3
	.	1	3
	+	1	3

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/1-init_dog.c
	*	1647288193	0
	"	21	0
	^	21	1
	.	21	0
	+	21	0

> ~/holbertonschool-low_level_programming/0x0E-structures_typedef/dog.h
	*	1647288159	0
	"	20	5
	^	20	6
	.	20	5
	+	20	5

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/4-sum.h
	*	1647287837	0
	"	4	5
	^	4	6
	.	4	5
	+	4	5

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/3-function_like_macro.h
	*	1647287804	0
	"	4	5
	^	4	6
	.	4	6
	+	4	6

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/2-main.c
	*	1647286834	0
	"	10	0
	^	10	1
	.	10	0
	+	1	18
	+	1	32
	+	1	85
	+	1	119
	+	1	121
	+	1	181
	+	1	197
	+	1	23
	+	1	76
	+	1	23
	+	1	76
	+	1	32
	+	1	73
	+	1	29
	+	1	94
	+	10	0

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/1-pi.h
	*	1647284850	0
	"	3	5
	^	3	6
	.	3	5
	+	3	5

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/README.md
	*	1647284699	0
	"	1	40
	^	1	41
	.	1	40
	+	1	40

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/6
	*	1647275328	0
	"	1	0
	^	1	0
	.	1	0
	+	1	0

> ~/holbertonschool-low_level_programming/0x0D-preprocessor/0-object_like_macro.h
	*	1647274770	0
	"	3	5
	^	3	6
	.	3	5
	+	1	11
	+	3	5

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/100-realloc.c
	*	1647121108	0
	"	42	0
	^	42	0
	.	33	1
	+	1	19
	+	1	1
	+	1	0
	+	1	22
	+	1	2
	+	1	0
	+	1	1
	+	2	0
	+	33	1
	+	2	14
	+	33	1
	+	45	0
	+	33	1

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/main.h
	*	1647120263	0
	"	8	71
	^	8	72
	.	8	71
	+	2	6
	+	1	12
	+	10	5
	+	4	37
	+	7	34
	+	1	3
	+	8	71

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/3-array_range.c
	*	1647087555	0
	"	18	14
	^	18	15
	.	19	0
	+	2	19
	+	3	42
	+	3	43
	+	23	0
	+	18	24
	+	22	0
	+	19	0

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/1-string_nconcat.c
	*	1647086877	0
	"	27	14
	^	27	15
	.	24	0
	+	2	19
	+	9	3
	+	10	56
	+	11	1
	+	12	11
	+	12	41
	+	12	44
	+	12	41
	+	12	77
	+	12	9
	+	16	15
	+	22	5
	+	21	11
	+	22	6
	+	23	27
	+	23	11
	+	23	24
	+	23	0
	+	24	37
	+	13	12
	+	12	5
	+	35	1
	+	31	11
	+	33	17
	+	34	2
	+	40	1
	+	36	11
	+	38	17
	+	36	29
	+	39	2
	+	38	9
	+	41	33
	+	42	16
	+	28	16
	+	42	0
	+	41	8
	+	30	0
	+	6	1
	+	4	2
	+	5	2
	+	6	7
	+	5	16
	+	6	6
	+	5	6
	+	8	9
	+	7	37
	+	8	27
	+	25	20
	+	28	16
	+	25	22
	+	25	26
	+	24	37
	+	25	22
	+	28	17
	+	25	20
	+	28	0
	+	30	0
	+	29	0
	+	26	0
	+	29	0
	+	26	3
	+	27	0
	+	20	5
	+	24	0

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/1-string_nconcat
	*	1647085750	0
	"	1	0

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/0-malloc_checked.c
	*	1647085397	0
	"	8	35
	^	8	36
	.	8	36
	+	2	19
	+	25	0
	+	6	18
	+	7	0
	+	8	36

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/2-calloc.c
	*	1646940703	0
	"	25	0
	^	7	28
	.	7	27
	+	2	19
	+	10	1
	+	11	14
	+	24	17
	+	14	27
	+	15	1
	+	15	14
	+	24	17
	+	15	15
	+	16	31
	+	18	1
	+	19	14
	+	20	12
	+	19	0
	+	20	0
	+	22	35
	+	23	15
	+	24	17
	+	4	8
	+	24	16
	+	25	0
	+	6	1
	+	5	14
	+	7	27

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/2-main.c
	*	1646940009	0
	"	50	0
	^	50	1
	.	50	0
	+	50	0

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/1-main.c
	*	1646938299	0
	"	17	0
	^	18	1
	.	18	0
	+	18	0

> ~/holbertonschool-low_level_programming/.git/MERGE_MSG
	*	1646937373	0
	"	1	0
	^	7	9
	.	1	0
	+	1	0

> ~/holbertonschool-low_level_programming/0x0C-more_malloc_free/README.md
	*	1646928232	0
	"	2	48
	^	2	49
	.	2	48
	+	1	0
	+	2	48

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/4-free_grid.c
	*	1646680876	0
	"	1	13
	^	1	14
	.	1	13
	+	16	0
	+	1	13

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/3-alloc_grid.c
	*	1646680706	0
	"	1	13
	^	1	14
	.	2	0
	+	35	0
	+	2	0

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/main.h
	*	1646680657	0
	"	7	39
	^	7	40
	.	7	39
	+	1	13
	+	2	14
	+	9	5
	+	4	46
	+	5	25
	+	6	37
	+	7	39

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/2-str_concat.c
	*	1646675953	0
	"	15	0
	^	15	0
	.	15	0
	+	39	0
	+	1	13
	+	13	16
	+	14	10
	+	15	0

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/1-strdup.c
	*	1646673385	0
	"	1	13
	^	1	14
	.	1	13
	+	29	0
	+	1	13

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/0-create_array.c
	*	1646669733	0
	"	24	0
	^	24	1
	.	24	0
	+	24	0

> ~/holbertonschool-low_level_programming/0x0B-malloc_free/README.md
	*	1646669212	0
	"	2	11
	^	2	12
	.	2	11
	+	2	11

> ~/holbertonschool-low_level_programming/0x09-static_libraries/create_static_lib.sh
	*	1646433562	0
	"	3	18
	^	3	19
	.	3	18
	+	3	18

> ~/holbertonschool-low_level_programming/0x09-static_libraries/_putchar.c
	*	1646433414	0
	"	13	0
	^	13	1
	.	13	0
	+	1	0
	+	2	0
	+	13	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/100-atoi.c
	*	1646433300	0
	"	15	0
	^	15	1
	.	15	0
	+	15	0
	+	1	17
	+	15	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/6-abs.c
	*	1646433205	0
	"	15	0
	^	18	1
	.	18	0
	+	18	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/4-isalpha.c
	*	1646433091	0
	"	22	0
	^	22	1
	.	22	0
	+	22	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/4-strpbrk.c
	*	1646433030	0
	"	22	0
	^	22	1
	.	22	0
	+	22	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/7-print_chessboard.c
	*	1646432602	0
	"	1	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/7-main.c
	*	1646432546	0
	"	23	0
	^	23	1
	.	23	0
	+	23	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/5-strstr.c
	*	1646432515	0
	"	33	0
	^	33	1
	.	33	0
	+	33	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/4-main.c
	*	1646432457	0
	"	18	0
	^	18	1
	.	18	0
	+	18	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/3-strspn.c
	*	1646432431	0
	"	25	0
	^	25	1
	.	25	0
	+	25	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/3-main.c
	*	1646432407	0
	"	18	0
	^	18	1
	.	18	0
	+	18	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/2-strchr.c
	*	1646432370	0
	"	18	0
	^	18	1
	.	18	0
	+	23	0
	+	1	17
	+	18	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/2-main.c
	*	1646432344	0
	"	21	0
	^	21	1
	.	21	0
	+	21	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/1-memcpy.c
	*	1646432308	0
	"	20	0
	^	20	1
	.	20	0
	+	27	0
	+	1	17
	+	20	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/1-main.c
	*	1646432279	0
	"	47	0
	^	47	1
	.	47	0
	+	1	148
	+	47	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/0-memset.c
	*	1646432219	0
	"	18	0
	^	18	1
	.	18	0
	+	26	0
	+	1	17
	+	18	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/0-main.c
	*	1646432174	0
	"	45	0
	^	45	1
	.	45	0
	+	45	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/7-leet.c
	*	1646432129	0
	"	24	0
	^	24	1
	.	24	0
	+	24	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/6-cap_string.c
	*	1646432089	0
	"	38	0
	^	38	1
	.	39	0
	+	38	51
	+	39	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/5-string_toupper.c
	*	1646432046	0
	"	19	0
	^	19	1
	.	19	0
	+	19	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/4-rev_array.c
	*	1646432020	0
	"	19	0
	^	19	1
	.	19	0
	+	19	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/3-strcmp.c
	*	1646431991	0
	"	22	0
	^	22	1
	.	22	0
	+	22	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/2-strncpy.c
	*	1646431965	0
	"	26	0
	^	26	1
	.	26	0
	+	1	0
	+	1	22
	+	1	0
	+	2	0
	+	26	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/1-strncat.c
	*	1646431902	0
	"	29	0
	^	29	1
	.	29	0
	+	32	0
	+	1	17
	+	29	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/0-strcat.c
	*	1646431868	0
	"	28	0
	^	28	1
	.	28	0
	+	30	0
	+	1	17
	+	28	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/9-strcpy.c
	*	1646431830	0
	"	23	0
	^	23	1
	.	23	0
	+	23	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/8-print_array.c
	*	1646431802	0
	"	21	0
	^	21	1
	.	21	0
	+	21	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/7-puts_half.c
	*	1646431758	0
	"	24	0
	^	24	1
	.	24	0
	+	24	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/4-print_rev.c
	*	1646431715	0
	"	25	0
	^	25	1
	.	25	0
	+	25	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/5-rev_string.c
	*	1646431330	0
	"	20	0
	^	20	1
	.	20	0
	+	20	0

> ~/holbertonschool-low_level_programming/0x09-static_libraries/3-puts.c
	*	1646431271	0
	"	15	0
	^	15	1
	.	15	0
	+	15	0
